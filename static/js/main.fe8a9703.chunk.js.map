{"version":3,"sources":["App/useLocalStorage.js","TodoCounter/TodoCounter.js","TodoSearch/TodoSearch.js","TodoList/TodoList.js","TodoItem/index.js","CreateTodoButton/index.js","TodoForm/index.js","Modal/index.js","TodoLoading/index.js","TodoHeader/Header.js","TodoError/todoError.js","EmptyTodos/emptyTodos.js","ChangeAlert/withStorageListener.js","ChangeAlert/index.js","App/index.js","App/useTodos.js","index.js"],"names":["useLocalStorage","itemName","initialValue","React","useState","sincronizedItem","setSincronizedItem","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","sincronize","TodoCounter","totalTodos","completedTodos","className","TodoSearch","searchValue","setSearchValue","placeholder","value","onChange","event","target","disabled","TodoList","props","propSwi","children","render","onLoading","onError","onEmptyTodos","searchedTodos","length","onEmptySearchResult","searchText","map","TodoItem","onComplete","onClick","xmlns","class","fill","viewBox","stroke","d","completed","text","onDelete","CreateTodoButton","setOpenModal","prevState","src","TodoForm","addTodo","newTodoValue","setNewTodoValue","onSubmit","preventDefault","type","Modal","ReactDOM","createPortal","document","getElementById","TodoLoading","Header","Children","toArray","child","cloneElement","TodoError","EmptyTodos","WithStorageListener","storageChange","setStorageChange","window","addEventListener","change","key","console","log","show","toggleShow","ChangeAlert","withStorageListener","App","todos","saveTodos","openModal","openModalEdit","setOpenModalEdit","filter","todo","todoText","toLowerCase","includes","newTodos","push","completeTodo","todoIndex","findIndex","deleteTodo","splice","updateTodo","todoItem","find","index","useTodos","Fragment"],"mappings":"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","file":"static/js/main.fe8a9703.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction useLocalStorage(itemName, initialValue) {\n  const [sincronizedItem, setSincronizedItem] = React.useState(true)\n  const [error, setError] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [item, setItem] = React.useState(initialValue);\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      try {\n          // Obteniendo toda la info\n        const localStorageItem = localStorage.getItem(itemName);\n        let parsedItem;\n        // SI NO HAY UN ESPACIO DONDE GUARDAR LA INFORMACION, ENTONCES AÃ‘ADIRA UN NUEVO ESPACIO CON UN VALOR INICIAL PARSEADO\n        if (!localStorageItem) {\n          localStorage.setItem(itemName, JSON.stringify(initialValue));\n          // EL ELEMENTO PARSEADO SE VA A CONVERTIR EN LA INFORMACION INICIAL\n          parsedItem = initialValue;\n        } else {\n            // Si hay info, entonces parcear el valor inicial A JAVASCRIPT\n          parsedItem = JSON.parse(localStorageItem);\n        }\n\n        // va a cambiar item por la info parceada\n        setItem(parsedItem);\n        setLoading(false);\n        setSincronizedItem(true)\n      } catch (error) {\n        setError(error);\n      }\n    }, 3000);\n  }, [sincronizedItem]);\n\n  const saveItem = (newItem) => {\n    try {\n    // va a parcear la info a texto\n      const stringifiedItem = JSON.stringify(newItem);\n      localStorage.setItem(itemName, stringifiedItem);\n      setItem(newItem);\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  const sincronize = () => {\n    setLoading(true)\n    setSincronizedItem(false)\n  }\n  return {\n    item,\n    saveItem,\n    loading,\n    error,\n    sincronize\n  };\n}\n\nexport default useLocalStorage;","import React from 'react';\nimport './TodoCounter.css';\n\nfunction TodoCounter({ totalTodos, completedTodos, loading }) {\n  return (\n    <h2 className={`TodoCounter ${!!loading && \".TodoCounter--loading\"}`}>Has completado {completedTodos} de {totalTodos} TODOs</h2>\n  );\n}\n\nexport { TodoCounter };","import React from \"react\";\nimport \"./TodoSearch.css\";\n\nfunction TodoSearch({ searchValue, setSearchValue, loading }) {\n  \n  const onSearchValueChange = (event) => {\n    setSearchValue(event.target.value);\n  };\n  return (\n    <input\n      className=\"TodoSearch\"\n      placeholder=\"Cebolla\"\n      value={searchValue}\n      onChange={onSearchValueChange}\n      disabled={loading}\n    />\n  )\n}\n\nexport { TodoSearch };\n","import React from \"react\";\nimport \"./TodoList.css\";\n\nfunction TodoList(props) {\n  const propSwi = props.children || props.render;\n\n  return (\n      <section className=\"TodoList-container\">\n        {props.loading && props.onLoading()}\n        <section className=\"TodoListMax\">\n        {props.error && props.onError()}\n        {!props.loading && !props.totalTodos && props.onEmptyTodos()}\n\n        {!!props.totalTodos &&\n          !props.searchedTodos.length &&\n          props.onEmptySearchResult(props.searchText)}\n        {!props.loading && !props.error && props.searchedTodos.map(propSwi)}\n        <ul>{props.children}</ul>\n        </section>\n      </section>\n  );\n}\n\nexport { TodoList };\n","import React from \"react\";\nimport \"./TodoItem.css\";\n\nfunction TodoItem(props) {\n  /* const onClickButton = () => {\n    // props.openModal ? props.setOpenModal(false) : props.setOpenModal(true);\n    setOpenModalEdit((prevState) => !prevState);\n  };\n */\n  return (\n    <li className=\"TodoItem\">\n      <span\n        className={`Icon Icon-check ${\n          props.onComplete && \"Icon-check--active\"\n        }`}\n        onClick={props.onComplete}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"h-6 w-6\"\n          fill=\"none\"\n          viewBox=\"0 0 40 40\"\n          stroke=\"currentColor\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M5 13l4 4L19 7\"\n          />\n        </svg>\n      </span>\n      <p className={`TodoItem-p ${props.completed && \"TodoItem-p--complete\"}`}>\n        {props.text}\n      </p>\n      <span className=\"Icon Icon-delete\" onClick={props.onDelete}>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"h-6 w-6\"\n          fill=\"none\"\n          viewBox=\"0 0 50 50\"\n          stroke=\"currentColor\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M6 18L18 6M6 6l12 12\"\n          />\n        </svg>\n      </span>\n\n      {/*  <button \n      onClick={() => onClickButton(text)}\n      > \n        Editar\n      </button> */}\n    </li>\n  );\n}\n\nexport { TodoItem };\n","import React from \"react\";\nimport \"./CreateTodoButton.css\";\n\nfunction CreateTodoButton({setOpenModal}) {\n  const onClickButton = () => {\n    // props.openModal ? props.setOpenModal(false) : props.setOpenModal(true);\n    setOpenModal((prevState) => !prevState);\n  };\n\n  return (\n    <button className=\"CreateTodoButton\" onClick={onClickButton}>\n      <img src=\"https://img.icons8.com/external-vitaliy-gorbachev-lineal-color-vitaly-gorbachev/60/000000/external-sunflower-flowers-vitaliy-gorbachev-lineal-color-vitaly-gorbachev.png\" />\n    </button>\n  );\n}\n\nexport { CreateTodoButton };\n","import React from \"react\";\nimport \"./index.css\";\n\nfunction TodoForm({ addTodo, setOpenModal }) {\n  const [newTodoValue, setNewTodoValue] = React.useState(\"\")\n\n  const onChange = (event) => {\n    setNewTodoValue(event.target.value);\n  }\n\n  const onCancel = () => {\n    setOpenModal(false)\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    addTodo(newTodoValue)\n    setOpenModal(false)\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <label className=\"lbl\">Escribe tu nuevo TODO</label>\n      <textarea value={newTodoValue} onChange={onChange} placeholder=\"Amar a Andy Biersack <3\" />\n\n      <div className=\"containerButton\">\n        <button className=\"TodoForm-button-cancel\" type=\"button\" onClick={onCancel}>\n          Cancelar\n        </button>\n        <button className=\"TodoForm-button-add\" type=\"submit\">AÃ±adir</button>\n      </div>\n    </form>\n  );\n}\n\nexport { TodoForm };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nfunction Modal({ children }) {\n  return ReactDOM.createPortal(\n    <div className=\"ModalBackground\">{children}</div>,\n    document.getElementById(\"modal\")\n  );\n}\n\nexport { Modal };\n","import React from \"react\";\nimport \"./index.css\"\n\nconst TodoLoading = () => {\n  return (\n    <main className=\"superior\">\n      <h1>Estamos cargando, no te desesperes...</h1>\n      <img className=\"img\" src=\"https://img.icons8.com/bubbles/50/000000/sunflower.png\"/>\n    </main>\n  );\n};\n\nexport default TodoLoading;\n","import React from \"react\";\n\nfunction Header({ children, loading }) {\n  /*   return (<header>{React.cloneElement(children, { loading })} </header>);\n   */\n  return (\n    <header>\n      {React.Children.toArray(children).map((child) =>\n        React.cloneElement(child, { loading })\n      )}{\" \"}\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction TodoError() {\n    <section>\n        <p>Ha habido un error</p>\n    </section>\n}\n\nexport {TodoError}","import React from \"react\";\n\nfunction EmptyTodos () {\n    return(\n        <section>\n            No hay todos\n        </section>\n    )\n}\n\nexport {EmptyTodos}","import React from \"react\";\n\nfunction WithStorageListener(sincronize) {\n  const [storageChange, setStorageChange] = React.useState(false);\n\n  window.addEventListener(\"storage\", (change) => {\n    if (change.key == \"TODOS_V1\") {\n      console.log(\"Hubo cambios en TODOS_V1\");\n      setStorageChange(true);\n    }\n  });\n\n  const toggleShow = () => {\n    sincronize();\n    setStorageChange(false);\n  };\n\n  return {\n    show: storageChange, toggleShow\n  }\n}\n\nexport default WithStorageListener;\n","import React from \"react\";\nimport withStorageListener from \"./withStorageListener\";\n\nfunction ChangeAlert({ sincronize }) {\n   const { show, toggleShow } = withStorageListener(sincronize)\n  if (show) {\n    return (\n      <div>\n        <p>hubo cambios</p>\n        <button\n        onClick={()=> toggleShow(false)}\n        >\n            Cargar la info</button>\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n\nexport default ChangeAlert;\n","import React from \"react\";\nimport { useTodos } from \"./useTodos\";\nimport { TodoCounter } from \"../TodoCounter/TodoCounter\";\nimport { TodoSearch } from \"../TodoSearch/TodoSearch\";\nimport { TodoList } from \"../TodoList/TodoList\";\nimport { TodoItem } from \"../TodoItem\";\nimport { CreateTodoButton } from \"../CreateTodoButton\";\nimport { TodoForm } from \"../TodoForm\";\nimport { Modal } from \"../Modal\";\nimport TodoLoading from \"../TodoLoading\";\nimport Header from \"../TodoHeader/Header\";\nimport { TodoError } from \"../TodoError/todoError\";\nimport { EmptyTodos } from \"../EmptyTodos/emptyTodos\";\nimport ChangeAlert from \"../ChangeAlert\";\n// const defaultTodos = [\n//   { text: 'Cortar cebolla', completed: true },\n//   { text: 'Tomar el cursso de intro a React', completed: false },\n//   { text: 'Llorar con la llorona', completed: true },\n//   { text: 'LALALALAA', completed: false },\n// ];\n\nfunction App() {\n  const {\n    error,\n    loading,\n    searchedTodos,\n    completeTodo,\n    deleteTodo,\n    openModal,\n    setOpenModal,\n    totalTodos,\n    completedTodos,\n    searchValue,\n    setSearchValue,\n    addTodo,\n    sincronize\n  } = useTodos();\n\n  return (\n    <React.Fragment>\n      <Header >\n        <TodoCounter \n        totalTodos={totalTodos} \n        completedTodos={completedTodos} \n        />\n        <TodoSearch \n        searchValue={searchValue}\n        setSearchValue={setSearchValue}\n        /* loading={loading} */\n         />\n      </Header>\n\n      <TodoList\n        error={error}\n        loading={loading}\n        searchedTodos={searchedTodos}\n        searchText={searchValue}\n        totalTodos={totalTodos}\n        onError={() => <TodoError />}\n        onLoading={() => <TodoLoading />}\n        onEmptyTodos={() => <EmptyTodos />}\n        onEmptySearchResult={(searchText) => <p>No hay resultado para {searchText}</p>}>\n        \n        {/* render={todo => (\n          <TodoItem\n            key={todo.text}\n            text={todo.text}\n            completed={todo.completed}\n            onComplete={() => completeTodo(todo.text)}\n            onDelete={() => deleteTodo(todo.text)}\n          />\n        )}\n      /> */}\n      {todo => (\n          <TodoItem\n            key={todo.text}\n            text={todo.text}\n            completed={todo.completed}\n            onComplete={() => completeTodo(todo.text)}\n            onDelete={() => deleteTodo(todo.text)}\n          />\n        )\n      }\n      </TodoList>\n      {/* <TodoList>\n        {error && <p>DesespÃ©rate, hubo un error...</p>}\n        {loading && <TodoLoading />}\n        {!loading && !searchedTodos.length && <p>No hay todos...</p>}\n\n        {searchedTodos.map((todo) => (\n          <TodoItem\n          key={todo.text}\n          text={todo.text}\n          completed={todo.completed}\n          onCompleted={() => completeTodo(todo.text)}\n          onDelete={() => deleteTodo(todo.text)}\n          completedTodos={completedTodos}\n          deleteTodo={deleteTodo} \n        />\n        ))}\n      </TodoList> */}\n\n      {!!openModal && (\n        <Modal>\n          <TodoForm addTodo={addTodo} setOpenModal={setOpenModal} />\n        </Modal>\n      )}\n      <CreateTodoButton setOpenModal={setOpenModal} openModal={openModal} />\n      {/*       {!!openModalEdit && (\n        <ModalEdit>\n          <TodoFormValue />\n        </ModalEdit>\n      )} */}\n\n      <ChangeAlert sincronize={sincronize}/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport useLocalStorage from \"./useLocalStorage\";\n\nfunction useTodos() {\n  const {\n    item: todos,\n    saveItem: saveTodos,\n    loading,\n    error,\n    sincronize\n  } = useLocalStorage(\"TODOS_V1\", []);\n\n  const [searchValue, setSearchValue] = React.useState(\"\");\n  const [openModal, setOpenModal] = React.useState(false);\n\n  const [openModalEdit, setOpenModalEdit] = React.useState(false);\n\n  const completedTodos = todos.filter((todo) => !!todo.completed).length;\n  const totalTodos = todos.length;\n\n  let searchedTodos = [];\n\n  if (!searchValue.length >= 1) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter((todo) => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLowerCase();\n      return todoText.includes(searchText);\n    });\n  }\n\n  const completeTodo = (text) => {\n    const todoIndex = todos.findIndex((todo) => todo.text === text);\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = true;\n    saveTodos(newTodos);\n  };\n\n  const addTodo = (text) => {\n    const newTodos = [...todos];\n    newTodos.push({\n      completed: false,\n      text,\n    });\n    saveTodos(newTodos);\n  };\n\n  const updateTodo = (text) => {\n    const newTodos = [...todos];\n    const todoItem = newTodos.find((item) => item.text === text);\n    const index = newTodos.findIndex((item) => item.text === text);\n\n    newTodos[index] = {\n      ...todoItem,\n      ...text,\n    };\n    //return todos[index]\n\n    saveTodos(newTodos);\n  };\n\n  const deleteTodo = (text) => {\n    const todoIndex = todos.findIndex((todo) => todo.text === text);\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos);\n  };\n\n  return {\n    loading,\n    error,\n    totalTodos,\n    completedTodos,\n    searchValue,\n    setSearchValue,\n    searchedTodos,\n    addTodo,\n    completeTodo,\n    deleteTodo,\n    updateTodo,\n    openModal,\n    setOpenModal,\n    openModalEdit,\n    setOpenModalEdit,\n    sincronize\n  };\n}\n\nexport { useTodos };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/index';\nimport './index.css';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}